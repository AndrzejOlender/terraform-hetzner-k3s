name: 'Terraform'

on:
  push:
    branches:
    - master
  pull_request:

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2
      
    # Add id_ssh and id_ssh.pub
    - name: Create id_ssh and id_ssh.pub 
      env:
        ID_SSH: ${{ secrets.ID_SSH }}
        ID_SSH_PUB: ${{ secrets.ID_SSH_PUB }}
      run: |
        umask 066; touch id_ssh
        umask 066; touch id_ssh.pub
        echo "$ID_SSH" > id_ssh
        echo "$ID_SSH_PUB" > id_ssh.pub
      shell: bash

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan

      # On push to master, build or change infrastructure according to Terraform configuration files
    - name: Terraform Apply
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      run: terraform apply -auto-approve
      
    # - name: Terraform Destroy
    #   if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    #   run: terraform destroy -auto-approve
